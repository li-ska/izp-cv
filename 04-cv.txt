#include <stdio.h>
#include <stdlib.h>

int maximum (int n, int a[]) { /* DOPLŇTE */ }

int main (void) {
  int n;
  int a[100];
  do {
    printf("Length (positive): "); scanf("%d", &n);
  } while (n<1);
  printf("List of %d ints: ", n);
  for (int i=0; i<n; i++) scanf("%d", &a[i]);
  printf("Maximum: %d\n", maximum(n,a));
  return 0;
}

/*******************************************************************************/

#include <stdio.h>
#include <string.h>

int match(char pat[], char t[]) { /* DOPLŇTE */ }

int main (void) {
  char pattern[20], text[100]; int n;
  printf("text: "); fgets(text, 100, stdin);
  text[strcspn(text,"\n")] = '\0';
  printf("pattern: "); scanf("%20s", pattern);
  n = match(pattern, text);
  if (n == -1) { printf("No occurrence\n"); }
    else {
      printf("%s\n", text);
      for (int i=0; i<n; i++) putchar(' ');
      printf("^\n");
      // /* alternative output */
      // printf("%.*s\033[0;31m%s\033[m%s\n",
      //        n, text, pattern, &text[n+strlen(pattern)]);
    }
  return 0;
}

/*******************************************************************************/

#include <stdio.h>
#include <stdbool.h>

int find(bool(* p)(int), int n, int a[]) {
  int k;
  for (k = 0; k<n && !(*p)(a[k]); k++);
  return k<n ? k : -1;
}

bool mod4gt5(int n) { return n % 4 == 0 && n > 5; }

int main(void) {
  int a[100] = {0,1,2,3,4,5,6,7,8,9};
  printf("delitelne 4 a vetsi nez 5: %d\n", find(mod4gt5, 10, a));
  printf("sude: %d\n", find(pli, 10, a));
  return 0;
}

/*******************************************************************************/

#include <stdio.h>

void insertsort(int n, int a[]) {  /* DOPLŇTE */  }

int main(void) {
  int n; int a[100];
  printf("number of elements: "); scanf("%d", &n); printf("sequence: ");
  for (int i=0; i<n; i++) scanf("%d", &a[i]);

  printf("Original: "); for (int i=0; i<n; i++) printf(" %3d",a[i]); putchar('\n');
  insertsort(n, a);
  printf("Sorted:   "); for (int i=0; i<n; i++) printf(" %3d",a[i]); putchar('\n');
}

/*******************************************************************************/
